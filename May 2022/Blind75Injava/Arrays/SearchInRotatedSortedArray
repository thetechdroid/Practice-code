class Solution {
    public int SearchInRotatedSortedArray(int[] nums, int target) {
        
        if(nums == null || nums.length == 0) return -1;
        
        if(nums.length == 2){
            if(target == nums[0]){
                return 0;
            }else if(target == nums[1]){
                return 1;
            }else{
                return -1;
            }
        }
        
        int start = 0;
        int end = nums.length - 1;
        
        while(start <= end){
         int mid = start + (end-start)/2;
            
         if(nums[start] == target) return start; // very imp edge case
         if(nums[end] == target) return end; // very imp edge case
            
         if(nums[mid] == target) return mid;
            
         else if(nums[mid] > nums[start]){
             if(target >= nums[start] && target < nums[mid]){
                end = mid-1; 
             }else{
                 start = mid+1;
             }
         }
        else{
            if(target<= nums[end] && target > nums[mid]){
                start = mid+1;
            }else{
                end = mid-1;
            }
            }
        }
        return -1;
    }
}
